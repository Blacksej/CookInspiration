@page "/recipe"
@page "/recipe/{id:int}"
@using RecipeModelLibrary.Models
@inject IRecipeService IRecipeService

@if (Id == null)
{
    <PageTitle>Create a new recipe</PageTitle>
    <h3>Create a new recipe</h3>
}
else
{
    <PageTitle>Edit @recipe.Name</PageTitle>
    <h3>Edit @recipe.Name</h3>
}

<EditForm Model="recipe" OnSubmit="HandleSubmit">
    <div>
        <label for="name">Recipe Name</label>
        <InputText id="name" @bind-Value="recipe.Name" class="form-control"></InputText>
    </div>
    <div>
        <label for="description">Recipe Description</label>
        <InputText id="description" @bind-Value="recipe.Description" class="form-control"></InputText>
    </div>
    <div>
        <label for="image">Recipe Image</label>
        <InputText id="image" @bind-Value="recipe.Image" class="form-control"></InputText>
    </div>
    <div>
        <div class="container-fluid">
            <div class="row row-cols-2">
                <div class="col">
                    <ul class="list-group" style="padding-top: 5px">
                        <li style="font-weight: bold" class="list-group-item list-group-item-primary">Available Ingredients:</li>
                        @foreach (var ingredient in IRecipeService.AllIngredients)
                        {
                            <li class="list-group-item">
                                <input type="checkbox" class="form-check-input" @onchange="args=>SelectedIngredientChanged(args, ingredient)" />
                                @ingredient.NameAndAmount
                            </li>
                        }
                    </ul>
                </div>
                <div class="col">
                    <ul class="list-group" style="padding-top: 5px">
                        <li style="font-weight: bold" class="list-group-item list-group-item-primary">Added Ingredients:</li>
                        @foreach (var ing in SelectedIngredients)
                        {
                            <li class="list-group-item">@ing.NameAndAmount</li>
                        }
                    </ul>
                </div>
            </div>
            <div class="row row-cols-2">
                <div class="col-6">
                    <button type="submit" class="btn btn-primary" style="margin-top: 5px">@btnText</button>
                </div>
                <div class="col-6">
                    <p>The above ingredient(s) will be added to the recipe when submitting</p>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    Recipe recipe = new Recipe();

    string btnText = string.Empty;

    List<Ingredient> SelectedIngredients { get; set; } = new List<Ingredient>();

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save new recipe" : "Update recipe";
        await IRecipeService.GetIngredients();
        await IRecipeService.GetRecipes();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            recipe.Ingredients = IRecipeService.RecipeIngredients;
        }
        else
        {
            recipe = await IRecipeService.GetSingleRecipe((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        foreach (var ingredient in SelectedIngredients)
        {
            if (!recipe.Ingredients.Exists(id => id.IngredientId == ingredient.IngredientId))
            {
                recipe.Ingredients.Add(ingredient);
            }
        }

        if (Id == null)
        {
            await IRecipeService.CreateRecipe(recipe);
        }
        else
        {
            await IRecipeService.UpdateRecipe(recipe);
        }
    }

    async Task DeleteRecipe()
    {
        await IRecipeService.DeleteRecipe(recipe.RecipeId);
    }

    private void SelectedIngredientChanged(ChangeEventArgs args, Ingredient ingredient)
    {
        bool IsSelected = (bool)args.Value;

        if (SelectedIngredients.Contains(ingredient) == false && IsSelected)
        {
            SelectedIngredients.Add(ingredient);
        }
        else
        {
            SelectedIngredients.Remove(ingredient);
        }
    }
    }
